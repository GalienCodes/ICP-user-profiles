type UserProfile = record {
  id : text;
  bio : text;
  username : text;
  createdAt : nat64;
  updatedAt : opt nat64;
  followers : vec text;
  following : vec text;
};
type UserProfilePayload = record { bio : text; username : text };
type _AzleResult = variant { Ok : UserProfile; Err : text };
type _AzleResult_1 = variant { Ok : vec UserProfile; Err : text };
service : () -> {
  createUserProfile : (UserProfilePayload) -> (_AzleResult);
  deleteUserProfile : (text) -> (_AzleResult);
  followProfile : (text, text) -> (_AzleResult);
  getUserProfile : (text) -> (_AzleResult) query;
  getUserProfiles : () -> (_AzleResult_1) query;
  unfollowProfile : (text, text) -> (_AzleResult);
  updateUserProfile : (text, UserProfilePayload) -> (_AzleResult);
}